using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using LeagueSharp;
using System.IO;
using System.Diagnostics;

namespace ElDominion
{
    class Program
    {
        static void Main(string[] args)
        {
            Game.OnGameStart += Game_OnGameStart;
            if (Game.Time > 20)
            {
                Game_OnGameStart(new EventArgs());
            }
        }

        private static List<Obj_AI_Minion> capturePoints;
        private static int capturedPoints = 0;
        private static int lastTick = 0;

        private static void Game_OnGameStart(EventArgs args)
        {
            Game.PrintChat("Bot started");
            if (ObjectManager.Player.Team == GameObjectTeam.Order) // Blue team wins
            {
                Game.OnGameUpdate += Game_OnGameUpdate;
                Game.OnGameNotifyEvent += Game_OnGameNotifyEvent;
                Game.OnGameEnd += Game_OnGameEnd;
            }
        }

        static void Game_OnGameEnd(GameEndEventArgs args)
        {
            Process[] processes = Process.GetProcessesByName("League of Legends");
            foreach (Process p in processes)
            {
                p.CloseMainWindow();
            }
        }

        private static void Game_OnGameNotifyEvent(GameNotifyEventArgs args)
        {
            if (args.EventId == GameEventId.OnCapturePointCaptured_A || args.EventId == GameEventId.OnCapturePointCaptured_B || args.EventId == GameEventId.OnCapturePointCaptured_C || args.EventId == GameEventId.OnCapturePointCaptured_D || args.EventId == GameEventId.OnCapturePointCaptured_E || args.EventId == GameEventId.OnCapturePointFiveCap)
                capturedPoints++;
        }

        private static void Game_OnGameUpdate(EventArgs args)
        {
            if (Environment.TickCount > lastTick + 2000)
            {
                if (capturePoints == null)
                {
                    capturePoints = new List<Obj_AI_Minion>();
                    foreach (Obj_AI_Minion m in ObjectManager.Get<Obj_AI_Minion>())
                    {
                        if (m.Name == "OdinNeutralGuardian")
                        {
                            capturePoints.Add(m);
                        }
                    }
                }
                else if (capturePoints.Count == 0)
                {
                    capturePoints = new List<Obj_AI_Minion>();
                    foreach (Obj_AI_Minion m in ObjectManager.Get<Obj_AI_Minion>())
                    {
                        if (m.Name == "OdinNeutralGuardian")
                        {
                            capturePoints.Add(m);
                        }
                    }
                }


                if (capturedPoints <= 4)
                {
                    Capture(capturePoints[capturedPoints]);
                }
                else
                {
                    Random r = new Random();
                    ObjectManager.Player.IssueOrder(GameObjectOrder.MoveTo, capturePoints[r.Next(0, 4)]); // Move to random capture points = no afk
                }
                lastTick = Environment.TickCount;
            }
        }

        private static void Capture(Obj_AI_Minion point)
        {
            MemoryStream ms = new MemoryStream();
            BinaryWriter bw = new BinaryWriter(ms);

            bw.Write((byte)0x39);
            bw.Write(ObjectManager.Player.NetworkId);
            bw.Write(point.NetworkId);

            Game.SendPacket(ms.ToArray(), PacketChannel.C2S, PacketProtocolFlags.NoFlags);
        }
    }
}
